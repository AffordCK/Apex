p /d robotId
p /d taskTable
n
display /d {robotId, stationId}
dispaly /d {profits}
display /d {profits}
n
display /d {profit}
n
q
b scheduler.cpp:96
c
p /d robotIdx
n
p /d taskTable
p /d sourceToStations
n
p /d taskTable
p *robots[0].task
p robots[0]->task
n
b scheduler.cpp:221
display /d profits
c
c
display /d profits
display /d {robotId, stationId}
p /d taskTable
n
display profitTemp
n
display /d {midStationId, targetStationId}
n
c
q
q
detach
attach 5431
b scheduler.cpp:96
c
p /d robotIdx
n
p robots[robotIdx]->goodType
p /d robots[robotIdx]->goodTyp
p robots[robotIdx]->x
p robots[robotIdx]->y
p /d taskTable
q
c
b scheduler.cpp:96
c
p /d taskTable
p robotIdx
c
p robotIdx
c
p robotIdx
p robots[robotIdx]->goodType
p /d taskTable
q
b scheduler.cpp:198
c
p robots[0]->state
p robots[1]->state
p robots[2]->state
p robots[3]->state
p robots[3]->goodType
c
p /d robotIdx
p /d robotId
display /d taskTable
c
c
p robotId
q
b scheduler.cpp:96
c
display /d robotIdx
n
p /d taskTable
p /d *\robots[0]
p /d *robots[0]
p /d *robots[3]
list
s
n
q
b scheduler.cpp:97
c
display /d robotId
display /d robotIdx
n
p *robots[1]
list
n
q
b scheduler.cpp:97
c
display \d robotIdx
display /d robotIdx
p *robots[0]
p /d taskTable
q
b scheduler.cpp:96
c
n
p /d taskTable
p /d robotIdx robots[0]->goodType
p /d robotIdx
p /d robots[0]->goodType
q
b scheduler.cpp:245
c
display /d robotId, midStationId, targetStationId
display /d {robotId, midStationId, targetStationId}
c
c
c
p StationsTable[stations[midStationId]->type].product
p /d StationsTable[stations[midStationId]->type].product
display /d taskTable
c
bt
q
b scheduler.cpp;246
b scheduler.cpp:246
c
q
c
b scheduler.cpp:230
c
display /d taskTable
display /d {robotId, midStationId, targetStationId}
c
b 238
disable b 1
c
c
c
c
disable b 1
c
p /d robots[0]
p /d *robots[0]
c
c
disable b
c
c
p /d robotId
c
c
bt
list
p robots[robotIdx]->task.targetStationId
p /d robots[robotIdx]->task.targetStationId
q
b scheduler.cpp:279
c
q
b scheduler.cpp:245
c
display /d {robotId, midStationId, targetStationId}
display /d taskTable
c
n
q
b scheduler.cpp:278
c
b scheduler.cpp:277
c
b scheduler.cpp:96
info b
q
b scheduler.cpp:246
c
display /d {robotId, midStationId, targetStationId}
c
display /d taskTable
c
c
c
c
c
c
c
c
c
c
c
c
c
c
b scheduler.cpp:96
c
p / *robots[0]
n
s
n
display /d profits
n
display /d {stationId, target}
display /d stationId
display /d target
n
display profit
n
display profitTemp
n
display profitTemp
n
display profitTemp
n
q
b scheduler.cpp:242
c
display /d {robotId, StationsTable[stations[midStationId]->type].product, midStationId, targetStationId}
display /d taskTable
c
c
break scheduler.cpp:174 if stationId = 15
c
p stationId
p /d stationId
display profit
n
n
n
display profitTemp
n
display profitTemp
n
display profits
n
p maxProfit
p targetStationIdTemp
p /d targetStationIdTemp
n
q
c
q
b robot.cpp:199
c
display {id, angle_cost, speed_cost, obstacle_cost, distance_cost, transborder_cost}
display {angle_cost, speed_cost, obstacle_cost, distance_cost, transborder_cost}
display id
p x, y
p x
p y
p goodType
q
q
b robot.cpp:197
source
b robot.cpp:197
q
